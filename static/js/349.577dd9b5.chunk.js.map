{"version":3,"file":"static/js/349.577dd9b5.chunk.js","mappings":"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","sources":["components/Functions/getParam.js","components/Functions/mapWork.js","components/Functions/villageType.js","components/Map.jsx"],"sourcesContent":["export default function getParam(name = \"\", def = \"\", asNumber = false) {\r\n    let p = new URLSearchParams(window.location.search).get(name);\r\n    return asNumber ? parseInt(p) || def : p || def;\r\n}","const mapWork = {\r\n    validCoordinates(x = 0, y = 0) {\r\n        return (x >= -50 && x <= 50 && y >= -50 && y <= 50);\r\n    },\r\n    safeCoordinate(c = 0) {\r\n        return Math.floor(c < -50 ? -50 : c > 50 ? 50 : c);\r\n    },\r\n    safeId(id = 1) {\r\n        return Math.floor(id < 1 ? 1 : id > 10201 ? 10201 : id);\r\n    },\r\n    getId(x = 0, y = 0) {\r\n        return this.safeId((x + 50) * 101 + (y + 50 + 1));\r\n    },\r\n    getCoordinates(id = 1) {\r\n        let w = this.safeId(id) - 1;\r\n        let x = Math.floor(w / 101);\r\n        let y = Math.floor(w - 101 * x);\r\n        return { x: x - 50, y: y - 50 };\r\n    }\r\n}\r\n\r\nexport default mapWork;","let wood = [4, 5, 5, 4, 3, 3, 4, 3, 1];\r\nlet clay = [4, 4, 3, 5, 5, 4, 3, 3, 1];\r\nlet iron = [4, 3, 4, 3, 4, 5, 5, 3, 1];\r\nlet crop = [6, 6, 6, 6, 6, 6, 6, 9, 15];\r\n\r\nconst getVillageType = (landType = 0) => [wood[landType], clay[landType], iron[landType], crop[landType]];\r\n\r\nexport default getVillageType;","import Pure from \"./Pure\";\r\nimport ImageMap from \"./Images\";\r\nimport { Link } from \"react-router-dom\";\r\nimport client from \"./CLASSES/client\";\r\nimport \"./Map.css\";\r\nimport sharedMemory from \"./CLASSES/SharedMemory\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport getVillageType from \"./Functions/villageType\";\r\nimport mapWork from \"./Functions/mapWork\";\r\nimport getParam from \"./Functions/getParam\";\r\n\r\nconst Land = {\r\n    Position: [\r\n        //X, Y\r\n        [16, 104],\r\n        [52, 84],\r\n        [88, 64],\r\n        [124, 44],\r\n        [160, 24],\r\n        [196, 4],\r\n        [232, -16],\r\n        [53, 124],\r\n        [89, 104],\r\n        [125, 84],\r\n        [161, 64],\r\n        [197, 44],\r\n        [233, 24],\r\n        [269, 4],\r\n        [90, 144],\r\n        [126, 124],\r\n        [162, 104],\r\n        [198, 84],\r\n        [234, 64],\r\n        [270, 44],\r\n        [306, 24],\r\n        [127, 164],\r\n        [163, 144],\r\n        [199, 124],\r\n        [235, 104],\r\n        [271, 84],\r\n        [307, 64],\r\n        [343, 44],\r\n        [164, 184],\r\n        [200, 164],\r\n        [236, 144],\r\n        [272, 124],\r\n        [308, 104],\r\n        [344, 84],\r\n        [380, 64],\r\n        [201, 204],\r\n        [237, 184],\r\n        [273, 164],\r\n        [309, 144],\r\n        [345, 124],\r\n        [381, 104],\r\n        [417, 84],\r\n        [238, 224],\r\n        [274, 204],\r\n        [310, 184],\r\n        [346, 164],\r\n        [382, 144],\r\n        [418, 124],\r\n        [454, 104]\r\n    ],\r\n    Ruler: [\r\n        [280, 292],\r\n        [280, 8],\r\n        [316, 272],\r\n        [316, 28],\r\n        [352, 252],\r\n        [352, 48],\r\n        [388, 232],\r\n        [388, 68],\r\n        [424, 212],\r\n        [424, 88],\r\n        [460, 192],\r\n        [460, 108],\r\n        [496, 172],\r\n        [496, 128]\r\n    ],\r\n    Arrows: [\r\n        \"144,56 98,84 98,49\",\r\n        \"102,233 149,260 101,266\",\r\n        \"439,87 390,57 438,52\",\r\n        \"443,266 394,257 442,232\"\r\n    ],\r\n    Polygon: [\r\n        \"53,137 90,157 53,177 16,157\",\r\n        \"89,117 126,137 89,157 52,137\",\r\n        \"125,97 162,117 125,137 88,117\",\r\n        \"161,77 198,97 161,117 124,97\",\r\n        \"197,57 234,77 197,97 160,77\",\r\n        \"233,37 270,57 233,77 196,57\",\r\n        \"269,17 306,37 269,57 232,37\",\r\n        \"90,157 127,177 90,197 53,177\",\r\n        \"126,137 163,157 126,177 89,157\",\r\n        \"162,117 199,137 162,157 125,137\",\r\n        \"198,97 235,117 198,137 161,117\",\r\n        \"234,77 271,97 234,117 197,97\",\r\n        \"270,57 307,77 270,97 233,77\",\r\n        \"306,37 343,57 306,77 269,57\",\r\n        \"127,177 164,197 127,217 90,197\",\r\n        \"163,157 200,177 163,197 126,177\",\r\n        \"199,137 236,157 199,177 162,157\",\r\n        \"235,117 272,137 235,157 198,137\",\r\n        \"271,97 308,117 271,137 234,117\",\r\n        \"307,77 344,97 307,117 270,97\",\r\n        \"343,57 380,77 343,97 306,77\",\r\n        \"164,197 201,217 164,237 127,217\",\r\n        \"200,177 237,197 200,217 163,197\",\r\n        \"236,157 273,177 236,197 199,177\",\r\n        \"272,137 309,157 272,177 235,157\",\r\n        \"308,117 345,137 308,157 271,137\",\r\n        \"344,97 381,117 344,137 307,117\",\r\n        \"380,77 417,97 380,117 343,97\",\r\n        \"201,217 238,237 201,257 164,237\",\r\n        \"237,197 274,217 237,237 200,217\",\r\n        \"273,177 310,197 273,217 236,197\",\r\n        \"309,157 346,177 309,197 272,177\",\r\n        \"345,137 382,157 345,177 308,157\",\r\n        \"381,117 418,137 381,157 344,137\",\r\n        \"417,97 454,117 417,137 380,117\",\r\n        \"238,237 275,257 238,277 201,257\",\r\n        \"274,217 311,237 274,257 237,237\",\r\n        \"310,197 347,217 310,237 273,217\",\r\n        \"346,177 383,197 346,217 309,197\",\r\n        \"382,157 419,177 382,197 345,177\",\r\n        \"418,137 455,157 418,177 381,157\",\r\n        \"454,117 491,137 454,157 417,137\",\r\n        \"275,257 312,277 275,297 238,277\",\r\n        \"311,237 348,257 311,277 274,257\",\r\n        \"347,217 384,237 347,257 310,237\",\r\n        \"383,197 420,217 383,237 346,217\",\r\n        \"419,177 456,197 419,217 382,197\",\r\n        \"455,157 492,177 455,197 418,177\",\r\n        \"491,137 528,157 491,177 454,157\"\r\n    ]\r\n}\r\n\r\nconst shared = {\r\n    id: 0,\r\n    x: 0,\r\n    y: 0,\r\n    isRequesting: false,\r\n    update(id = 0) {\r\n        let vid = mapWork.safeId(id);\r\n        let c = mapWork.getCoordinates(vid);\r\n        this.id = vid;\r\n        this.x = c.x;\r\n        this.y = c.y;\r\n        return vid;\r\n    }\r\n}\r\nlet updateProps = (name, props) => sharedMemory.safe(name, e => e.updateProps(props));\r\nlet runFunction = (name, func, param) => sharedMemory.safe(name, e => e[func](param));\r\nlet requestMap = id => runFunction(\"map-view\", \"request\", shared.update(id));\r\n\r\nclass Map extends Pure {\r\n    coordinate(c = 0) {\r\n        return (c < -50 ? (c + 101) : (c > 50 ? (c - 101) : c));\r\n    }\r\n    navigate(delta = 0, v = true) {\r\n        return e => {\r\n            e.preventDefault();\r\n            if (shared.isRequesting) return;\r\n            shared.isRequesting = true;\r\n            if (v)\r\n                requestMap(mapWork.getId(this.coordinate(shared.x + delta), shared.y));\r\n            else\r\n                requestMap(mapWork.getId(shared.x, this.coordinate(shared.y + delta)));\r\n        }\r\n    }\r\n    onRemoved() {\r\n        // Reset to solve map problem:\r\n        shared.id = client.activeVillageId || 0;\r\n    }\r\n    render() {\r\n        shared.id = shared.update(getParam(\"id\", client.activeVillageId || 1, true));\r\n        runFunction(\"coordinates\", \"updateInputs\");\r\n        return <div id=\"Map\">\r\n            <FieldInfo register=\"map-info\" />\r\n            <svg className=\"background\" viewBox=\"0 0 540 316\">\r\n                <image xlinkHref={ImageMap.map.background} width={540} height={316} />\r\n                <MapView register=\"map-view\" />\r\n                <Link to=\"#\" onClick={this.navigate(-1)}><polygon points={Land.Arrows[0]} /></Link>\r\n                <Link to=\"#\" onClick={this.navigate(-1, false)}><polygon points={Land.Arrows[1]} /></Link>\r\n                <Link to=\"#\" onClick={this.navigate(1, false)}><polygon points={Land.Arrows[2]} /></Link>\r\n                <Link to=\"#\" onClick={this.navigate(1)}><polygon points={Land.Arrows[3]} /></Link>\r\n            </svg>\r\n            <Coordinates register=\"coordinates\" />\r\n            <svg className=\"direction\" viewBox=\"0 0 100 57\">\r\n                <image xlinkHref={ImageMap.map.dir} width={100} height={57} />\r\n                <Link to=\"#\" onClick={this.navigate(7, false)}><polygon points=\"51,15 73,3 95,15 73,27\" /></Link>\r\n                <Link to=\"#\" onClick={this.navigate(7)}><polygon points=\"51,41 73,29 95,41 73,53\" /></Link>\r\n                <Link to=\"#\" onClick={this.navigate(-7, false)}><polygon points=\"4,41 26,29 48,41 26,53\" /></Link>\r\n                <Link to=\"#\" onClick={this.navigate(-7)}><polygon points=\"4,15 26,3 48,15 26,27\" /></Link>\r\n            </svg>\r\n        </div>;\r\n    }\r\n}\r\n\r\nclass Coordinates extends Pure {\r\n    x = shared.x;\r\n    y = shared.y;\r\n    inputX = React.createRef();\r\n    inputY = React.createRef();\r\n    safe(c = 0) { return (c < -50 ? -50 : c > 50 ? 50 : c); }\r\n    updateMap() {\r\n        let x = this.x;\r\n        let y = this.y;\r\n        if (isNaN(x) || isNaN(y)) return;\r\n        requestMap(mapWork.getId(this.safe(x), this.safe(y)));\r\n    }\r\n    updateInputs() {\r\n        this.inputX.current.value = this.x = shared.x;\r\n        this.inputY.current.value = this.y = shared.y;\r\n    }\r\n    number(input, fallback) {\r\n        let n = Number(input.target.value);\r\n        return this.safe(isNaN(n) ? fallback : n);\r\n    }\r\n    render() {\r\n        return <form onSubmit={e => { e.preventDefault(); this.updateMap(); }} className=\"CoordinatesForm\">\r\n            <input\r\n                type=\"number\"\r\n                min={-50}\r\n                max={50}\r\n                defaultValue={shared.x}\r\n                ref={this.inputX}\r\n                onBlur={e => (e.target.value = this.x)}\r\n                onChange={e => (this.x = this.number(e, shared.x))}\r\n            />\r\n            <input\r\n                type=\"number\"\r\n                min={-50}\r\n                max={50}\r\n                defaultValue={shared.y}\r\n                ref={this.inputY}\r\n                onBlur={e => (e.target.value = this.y)}\r\n                onChange={e => (this.y = this.number(e, shared.y))}\r\n            />\r\n            <Button type=\"submit\" size=\"sm\" variant=\"secondary\">بحث</Button>\r\n        </form>;\r\n    }\r\n}\r\n\r\nclass FieldInfo extends Pure {\r\n    view = false;\r\n    landType = 0;\r\n    taken = 0;\r\n    landName = \"\";\r\n    playerName = \"\";\r\n    race = 1;\r\n    population = 0;\r\n    allianceName = \"\";\r\n    isVillage = 0;\r\n    x = 0;\r\n    y = 0;\r\n    coordinates = React.createRef();\r\n    getLandFeilds() {\r\n        return this.landName + \" \" + getVillageType(this.landType).join(\"-\");\r\n    }\r\n    updateCoordinates() {\r\n        this.coordinates.current.textContent = this.view ? (this.x + \" , \" + this.y) : (shared.x + \" , \" + shared.y);\r\n    }\r\n    render() {\r\n        return <>\r\n            <h4 className=\"title\">خريطة (<span ref={this.coordinates}>{shared.x} , {shared.y}</span>)</h4>\r\n            <table style={{ opacity: (this.view && this.taken) ? 1 : 0.5 }} className=\"info_box table_collapsed\">\r\n                <tbody>\r\n                    <tr><th colSpan={2}>{this.view ? (this.isVillage && !this.taken ? this.getLandFeilds() : this.landName) : \"التفاصيل\"}</th></tr>\r\n                    <tr><td>اللاعب:</td><td>{this.view && this.taken ? this.playerName : \"-\"}</td></tr>\r\n                    <tr><td>السكان:</td><td>{(this.view && this.taken && this.isVillage) ? this.population : \"-\"}</td></tr>\r\n                    <tr><td>التحالف:</td><td>{this.view && this.taken ? this.allianceName : \"-\"}</td></tr>\r\n                </tbody>\r\n            </table>\r\n        </>;\r\n    }\r\n}\r\n\r\nclass MapView extends Pure {\r\n    state = { Content: [] };\r\n    isRequesting = false;\r\n    view(info, data) {\r\n        updateProps(\"map-info\", {\r\n            playerName: info[0],\r\n            landName: info[1],\r\n            allianceName: info[2],\r\n            race: data[1],\r\n            isVillage: data[2],\r\n            taken: data[3],\r\n            population: data[4],\r\n            x: data[5],\r\n            y: data[6],\r\n            landType: data[7],\r\n            view: true\r\n        });\r\n        runFunction(\"map-info\", \"updateCoordinates\");\r\n    }\r\n    hide() {\r\n        updateProps(\"map-info\", { view: false });\r\n        runFunction(\"map-info\", \"updateCoordinates\");\r\n    }\r\n    request(id = 1) {\r\n        if (this.isRequesting) return;\r\n        this.isRequesting = true;\r\n        client.mapViewNormal(id).then(map => {\r\n            if (!this.componentIsReady) return;\r\n            this.isRequesting = false;\r\n            shared.isRequesting = false;\r\n            let images = [];\r\n            let links = [];\r\n            let ruler = [];\r\n            let rIncX = 0;\r\n            let rIncY = 1;\r\n            map.info.forEach((info, index) => {\r\n                let data = map.data[index];\r\n                let P = Land.Position[index];\r\n                let C = Land.Polygon[index];\r\n                images.push(<image key={`Map-Image-${index}-${data[0]}`} xlinkHref={ImageMap.map[info[3]]} x={P[0]} y={P[1]} width=\"74\" height=\"74\" />);\r\n                links.push(<Link\r\n                    onBlur={() => this.hide()}\r\n                    onMouseLeave={() => this.hide()}\r\n                    onFocus={() => this.view(info, data)}\r\n                    onMouseEnter={() => this.view(info, data)}\r\n                    key={`Map-Link-${index}-${data[0]}`}\r\n                    to={\"/View?id=\" + data[0]}>\r\n                    <polygon points={C} opacity={0} />\r\n                </Link>);\r\n                let R = Land.Ruler;\r\n                if (index % 7 === 0) {\r\n                    let Y = R[rIncY];\r\n                    ruler.push(<text key={`Map-Ruler-Y-${index}-${data[0]}`} x={Y[0] + 30} y={Y[1] + 14}>{data[5]}</text>);\r\n                    rIncY += 2;\r\n                }\r\n                if (index < 7) {\r\n                    let X = R[rIncX];\r\n                    ruler.push(<text key={`Map-Ruler-X-${index}-${data[0]}`} x={X[0] + 30} y={X[1] + 12}>{data[6]}</text>);\r\n                    rIncX += 2;\r\n                }\r\n            });\r\n            this.updateState({ Content: images.concat(links, ruler) });\r\n            shared.update(id);\r\n            runFunction(\"coordinates\", \"updateInputs\");\r\n            runFunction(\"map-info\", \"updateCoordinates\");\r\n            // updateProps(\"map-info\", { x: shared.x, y: shared.y });\r\n        });\r\n    }\r\n    onReady() {\r\n        this.request(shared.id);\r\n    }\r\n\r\n    render() {\r\n        return this.state.Content;\r\n    }\r\n}\r\n\r\n// function CustomSort(a = [1, 2, 3]) {\r\n//     let l = a.length;\r\n//     for (let i = 0; i < l - 1; i++) {\r\n//         let s = i;\r\n//         for (let j = i + 1; j < l; j++)\r\n//             if (a[s] > a[j])\r\n//                 s = j;\r\n//         if (s !== i) {\r\n//             let t = a[i];\r\n//             a[i] = a[s];\r\n//             a[s] = t;\r\n//         }\r\n//     }\r\n//     return a;\r\n// }\r\n// function compare(rounds = 1e6) {\r\n//     let totalN = 0, totalC = 0;\r\n//     for (let i = 0; i < rounds; i++) {\r\n//         let c = performance.now();\r\n//         let ArrayC = [89, 64, 69, 71, 96, 6, 23, 40, 71, 63, 47, 19, 4, 29, 85, 23, 21, 96, 21, 2, 4, 17, 3, 14, 88, 94, 14, 28, 9, 70, 65, 64, 50, 67, 59, 43, 38, 44, 15, 36, 70, 87, 7, 21, 15, 2, 19, 42, 18, 19, 16, 52, 86, 99, 42, 68, 96, 40, 62, 15, 31, 49, 85, 26, 33, 96, 74, 71, 65, 62, 2, 5, 45, 46, 33, 47, 97, 90, 16, 26, 41, 85, 1, 60, 24, 73, 60, 74, 13, 84, 10, 85, 95, 54, 85, 23, 83, 43, 27, 28];\r\n//         CustomSort(ArrayC);\r\n//         totalC += performance.now() - c;\r\n\r\n//         let n = performance.now();\r\n//         let ArrayN = [89, 64, 69, 71, 96, 6, 23, 40, 71, 63, 47, 19, 4, 29, 85, 23, 21, 96, 21, 2, 4, 17, 3, 14, 88, 94, 14, 28, 9, 70, 65, 64, 50, 67, 59, 43, 38, 44, 15, 36, 70, 87, 7, 21, 15, 2, 19, 42, 18, 19, 16, 52, 86, 99, 42, 68, 96, 40, 62, 15, 31, 49, 85, 26, 33, 96, 74, 71, 65, 62, 2, 5, 45, 46, 33, 47, 97, 90, 16, 26, 41, 85, 1, 60, 24, 73, 60, 74, 13, 84, 10, 85, 95, 54, 85, 23, 83, 43, 27, 28];\r\n//         ArrayN.sort((a, b) => a - b);\r\n//         totalN += performance.now() - n;\r\n//     }\r\n//     console.log(`Native: ${totalN}ms\\nCustom: ${totalC}ms`);\r\n// }\r\n\r\nexport default Map;"],"names":["getParam","name","def","asNumber","p","URLSearchParams","window","location","search","get","parseInt","mapWork","validCoordinates","x","y","safeCoordinate","c","Math","floor","safeId","id","getId","this","getCoordinates","w","wood","clay","iron","crop","landType","Land","Position","Ruler","Arrows","Polygon","shared","isRequesting","update","vid","updateProps","props","sharedMemory","e","runFunction","func","param","requestMap","Map","delta","v","preventDefault","coordinate","client","FieldInfo","register","className","viewBox","xlinkHref","ImageMap","width","height","MapView","Link","to","onClick","navigate","points","Coordinates","Pure","inputX","React","inputY","isNaN","safe","current","value","input","fallback","n","Number","target","onSubmit","updateMap","type","min","max","defaultValue","ref","onBlur","onChange","number","Button","size","variant","view","taken","landName","playerName","race","population","allianceName","isVillage","coordinates","getVillageType","join","textContent","style","opacity","colSpan","getLandFeilds","state","Content","info","data","then","map","componentIsReady","images","links","ruler","rIncX","rIncY","forEach","index","P","C","push","hide","onMouseLeave","onFocus","onMouseEnter","R","Y","X","updateState","concat","request"],"sourceRoot":""}