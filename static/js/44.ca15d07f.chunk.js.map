{"version":3,"file":"static/js/44.ca15d07f.chunk.js","mappings":"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","sources":["components/CLASSES/Response.js","components/Functions/validation.js","components/Feilds.jsx","components/Interfaces/SnackBar.jsx","components/Login.jsx"],"sourcesContent":["class Register {\r\n    constructor(response) {\r\n        this.done = response[0] === 1;\r\n        this.error = response[1] === 1;\r\n        this.unkownError = response[2] === 1;\r\n        this.notReady = response[3] === 1;\r\n        this.isEnded = response[4] === 1;\r\n        this.isFull = response[5] === 1;\r\n        this.username_used = response[6] === 1;\r\n        this.email_used = response[7] === 1;\r\n        this.e_username = response[8];\r\n        this.e_password = response[9];\r\n        this.e_email = response[10];\r\n        this.e_race = response[11];\r\n    }\r\n}\r\n\r\nclass ServerInfo {\r\n    constructor(server = []) {\r\n        this.serverNumber = server[0];\r\n        this.ready = server[1] === 1;\r\n        this.ended = server[2] === 1;\r\n        this.isFull = server[3] === 1;\r\n        this.started = server[4];\r\n        this.players = server[5];\r\n\r\n    }\r\n}\r\n\r\nclass ListServers {\r\n    /** @type {ServerInfo[]} */\r\n    servers = [];\r\n    constructor(servers = []) {\r\n        servers.forEach(server => this.servers.push(new ServerInfo(server)));\r\n    }\r\n}\r\n\r\nclass Stats {\r\n    constructor(response = []) {\r\n        this.players = response[0];\r\n        this.online = response[1];\r\n        this.servers = response[2];\r\n    }\r\n}\r\n\r\nexport default { Register, ListServers, Stats }","function result(valid = true, message = \"\") {\r\n    return { valid, result: message }\r\n}\r\n\r\nfunction safeLength(text = \"\", min = 3, max = 15, eMin = \"\", eMax = \"\") {\r\n    let len = text.length;\r\n    if (len < min) return result(false, eMin);\r\n    else if (len > max) return result(false, eMax);\r\n    return result(true);\r\n}\r\n\r\nfunction safeCharacters(text = \"\", err = \"توجد أحرف/رموز غير صالحة\") {\r\n    let noEmoji = text.replace(/\\p{Emoji}|\\p{Extended_Pictographic}|\\u200D/gui, \"$\"); // Exclude emojis.\r\n    let len = noEmoji.length;\r\n    for (let i = 0; i < len; i++) {\r\n        let c = noEmoji.charCodeAt(i);\r\n        /*  Safe Characters code:\r\n            32 -> 126\r\n            1569 -> 1595\r\n            1601 -> 1610\r\n        */\r\n        if ((c > 31 && c < 127) || (c > 1569 && c < 1596) || (c > 1600 && c < 1611))\r\n            // Valid:\r\n            continue;\r\n        else\r\n            // Not Valid:\r\n            return result(false, err);\r\n    }\r\n    return result(true);\r\n}\r\n\r\nfunction safeText(text = \"\", min = 4, max = 20) {\r\n    let result = \"\";\r\n    let noEmoji = text.replace(/\\p{Extended_Pictographic}/ug, \"$\"); // Replace emojis with '$' character.\r\n    let len = noEmoji.length;\r\n    if (len < min) result = `الحد الأدنى ${min} أحرف`;\r\n    else if (len > max) result = `الحد الأقصى ${max} حرف`;\r\n    else {\r\n        for (let i = 0; i < len; i++) {\r\n            let c = noEmoji.charCodeAt(i);\r\n            // if true? then: unsafe character detected -> break loop\r\n            if (c < 31 || (c > 127 && c < 1569) || (c > 1595 && c < 1601) || c > 1610) {\r\n                result = \"توجد أحرف/رموز غير صالحة\";\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return { valid: result === \"\", result };\r\n}\r\n\r\nfunction safeUsername(username = \"\") {\r\n    let len = username.replace(/\\p{Extended_Pictographic}/ug, \"$\").length;\r\n    if (len < 3) return result(false, \"أسم المستخدم قصير يجب ان لا يقل عن 3 أحرف\");\r\n    if (len > 15) return result(false, \"أسم المستخدم طويل يجب ان لا يزيد عن 15 حرف\");\r\n    return safeCharacters(username);\r\n}\r\n\r\nfunction safeEmail(email = \"\") {\r\n    let len = email.length;\r\n    if (len < 5 || len > 32) return result(false, \"بريد إلكتروني غير صالح\");\r\n    let valid = /^[^@]+@[^@]{1,}\\.[^@]{2,}$/.test(email);\r\n    if (!valid) return result(false, \"بريد إلكتروني غير صالح\");\r\n    return safeCharacters(email, \"بريد إلكتروني غير صالح\");\r\n}\r\n\r\nfunction safePassword(password = \"\") {\r\n    return safeLength(password, 5, 32,\r\n        \"كلمة المرور قصيرة يجب ان لا تقل عن 5 أحرف\",\r\n        \"كلمة المرور طويلة يجب ان لا تزيد عن 32 حرف\"\r\n    );\r\n}\r\n\r\nconst validators = { safeLength, safeText, safeUsername, safeEmail, safePassword, safeCharacters };\r\n\r\nexport default validators;","import { Form } from 'react-bootstrap';\r\nimport validate from \"./Functions/validation\";\r\nimport Pure from './Pure';\r\n\r\n\r\nclass Username extends Pure {\r\n    value = \"\";\r\n    state = { error: \"\", validated: 0 } // 0=not validated yet, 1=not valid, 2=valid\r\n    isValid() {\r\n        let test = validate.safeUsername(this.value);\r\n        this.updateState({ validated: test.valid ? 2 : 1, error: test.result });\r\n        return test.valid;\r\n    }\r\n    render() {\r\n        return <>\r\n            <Form.Control autoFocus=\"on\" tabIndex={this.props.tabIndex || 1} name=\"name\" type=\"text\" size=\"sm\" onBlur={() => this.isValid()} onChange={e => (this.value = e.target.value)} placeholder=\"اسم المستخدم\" />\r\n            <div className=\"error ta-right\">{this.state.error}</div>\r\n        </>;\r\n    }\r\n}\r\n\r\nclass Password extends Pure {\r\n    value = \"\";\r\n    state = { error: \"\", validated: 0 } // 0=not validated yet, 1=not valid, 2=valid\r\n    isValid() {\r\n        let test = validate.safePassword(this.value);\r\n        this.updateState({ validated: test.valid ? 2 : 1, error: test.result });\r\n        return test.valid;\r\n    }\r\n    render() {\r\n        return <>\r\n            <Form.Control autoComplete=\"on\" tabIndex={this.props.tabIndex || 1} name=\"password\" type=\"password\" size=\"sm\" onBlur={() => this.isValid()} onChange={e => (this.value = e.target.value)} placeholder=\"كلمة المرور\" />\r\n            <div className=\"error ta-right\">{this.state.error}</div>\r\n        </>;\r\n    }\r\n}\r\n\r\nclass Email extends Pure {\r\n    value = \"\";\r\n    state = { error: \"\", validated: 0 } // 0=not validated yet, 1=not valid, 2=valid\r\n    isValid() {\r\n        let test = validate.safeEmail(this.value);\r\n        this.updateState({ validated: test.valid ? 2 : 1, error: test.result });\r\n        return test.valid;\r\n    }\r\n    render() {\r\n        return <>\r\n            <Form.Control tabIndex={this.props.tabIndex || 1} name=\"email\" type=\"text\" size=\"sm\" onBlur={() => this.isValid()} onChange={e => (this.value = e.target.value)} placeholder=\"البريد الالكتروني\" />\r\n            <div className=\"error ta-right\">{this.state.error}</div>\r\n        </>;\r\n    }\r\n}\r\n\r\nexport { Username, Email, Password }","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport \"./SnackBar.css\";\r\nimport Pure from '../Pure';\r\n\r\nconst sDialog = {\r\n    open: (msg = \"\") => { },\r\n    close: () => { }\r\n}\r\n\r\n/** @augments {Pure<{ vertical: String, horizontal: String, duration: Number }>} */\r\nclass SnackBar extends Pure {\r\n    state = { visible: false }\r\n    message = \"\";\r\n    onReady() {\r\n        sDialog.open = (msg = \"\") => this.open(msg);\r\n        sDialog.close = () => this.close();\r\n    }\r\n    onRemoved() {\r\n        sDialog.open = (msg = \"\") => { };\r\n        sDialog.close = () => { };\r\n    }\r\n    open(msg = \"\") {\r\n        this.message = msg;\r\n        this.updateState({ visible: true });\r\n    }\r\n    close() {\r\n        this.updateState({ visible: false });\r\n    }\r\n\r\n    render() {\r\n        return <Snackbar\r\n            anchorOrigin={{ vertical: this.props.vertical || \"bottom\", horizontal: this.props.horizontal || \"center\" }}\r\n            open={this.state.visible}\r\n            autoHideDuration={6000}\r\n            message={this.message}\r\n            onClose={() => this.close()}\r\n            className=\"toast-message\"\r\n            action={\r\n                <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={() => this.close()}>\r\n                    <CloseIcon fontSize=\"small\" />\r\n                </IconButton>\r\n            }\r\n        />\r\n    }\r\n}\r\n\r\nexport { SnackBar, sDialog }","import React from \"react\";\r\nimport { Form, Button, Col } from \"react-bootstrap\";\r\nimport { Navigate } from \"react-router\";\r\nimport client from \"./CLASSES/client\";\r\nimport \"./Login.css\";\r\nimport { Username, Password } from \"./Feilds\";\r\nimport { SnackBar, sDialog } from \"./Interfaces/SnackBar\";\r\nimport Pure from \"./Pure\";\r\nimport { Loading } from \"./SubComponents/ProgressBar\";\r\nimport sharedMemory from \"./CLASSES/SharedMemory\";\r\nimport Response from \"./CLASSES/Response\";\r\n\r\nclass Login extends Pure {\r\n    state = {\r\n        Navigate: false\r\n    }\r\n\r\n    data = {\r\n        username: \"\",\r\n        password: \"\",\r\n        server: 1,\r\n    }\r\n\r\n    login(event) {\r\n        event.preventDefault();\r\n        let username = sharedMemory.get(\"username\");\r\n        let password = sharedMemory.get(\"password\");\r\n        if (username.isValid() && password.isValid()) {\r\n            Loading.show();\r\n            this.data.username = username.value;\r\n            this.data.password = password.value;\r\n            client.login(this.data).then(response => {\r\n                if (!this.componentIsReady) return;\r\n                if (response.authorized === true) {\r\n                    client.updateAuthorization(response.server, response.authorized, response.key);\r\n                    client.activeVillageId = response.activeVillageId;\r\n                    this.setState({ Navigate: true });\r\n                } else {\r\n                    sDialog.open(response.e_username + response.e_password);\r\n                }\r\n                Loading.hide();\r\n            })\r\n        }\r\n        return false;\r\n    }\r\n\r\n    render() {\r\n        if (!client.ready)\r\n            return <></>;\r\n        if (this.state.Navigate)\r\n            return <Navigate to=\"/Village\" />;\r\n        else\r\n            return <div className=\"game-login\">\r\n                <SnackBar />\r\n                <h1>الدخول إلى اللعبة</h1>\r\n                <div className=\"game-login-top\">\r\n                    <div><span>الدخول</span></div>\r\n                    <p>عليك تفعيل ملفات التعريف (كوكيز) لتتمكن من تسجيل الدخول. و إذا تعدد مستخدموا هذا الحاسب يجب أن تضغط على تسجيل الخروج في كل مرة تنتهي من اللعب وذلك حفاظاً على بياناتك.</p>\r\n                </div>\r\n                <form onSubmit={event => this.login(event)}>\r\n                    <Form.Group className=\"game-login-form\">\r\n                        <Form.Row>\r\n                            <Form.Label column sm={2}>اسم المستخدم</Form.Label>\r\n                            <Col>\r\n                                <Username register=\"username\" />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column sm={2}>كلمة المرور</Form.Label>\r\n                            <Col>\r\n                                <Password register=\"password\" />\r\n                            </Col>\r\n                        </Form.Row>\r\n                        <Form.Row>\r\n                            <Form.Label column sm={2}>السيرفر<br /></Form.Label>\r\n                            <Col className=\"servers-col\">\r\n                                <ServersList onChange={server => { this.data.server = server; }} />\r\n                            </Col>\r\n                        </Form.Row>\r\n                    </Form.Group>\r\n                    <Button variant=\"secondary\" type=\"submit\">تسجيل الدخول</Button>\r\n                </form>\r\n            </div>;\r\n    }\r\n}\r\n\r\nclass ServersList extends Pure {\r\n    state = { ready: false }\r\n    /** @type {{ serverNumber: number, ready: boolean, ended: boolean, isFull: boolean, started: number, players: number }[]} */\r\n    servers = <></>;\r\n\r\n    onReady() {\r\n        client.listServers(responseJson => {\r\n            let response = new Response.ListServers(responseJson).servers;\r\n            if (!Array.isArray(response)) return;\r\n            this.servers = <select className=\"servers-list\" onChange={e => this.props.onChange(Number(e.target.value))}>\r\n                {response.map(server => <option key={\"Server\" + server.serverNumber} value={server.serverNumber}>السيرفر {server.serverNumber}</option>)}\r\n            </select>;\r\n            this.updateState({ ready: true });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return this.servers;\r\n    }\r\n}\r\n\r\nexport default Login;"],"names":["Register","response","this","done","error","unkownError","notReady","isEnded","isFull","username_used","email_used","e_username","e_password","e_email","e_race","ServerInfo","server","serverNumber","ready","ended","started","players","ListServers","servers","forEach","push","Stats","online","result","valid","message","safeLength","text","min","max","eMin","eMax","len","length","safeCharacters","err","noEmoji","replace","i","c","charCodeAt","validators","safeText","safeUsername","username","safeEmail","email","test","safePassword","password","Username","value","state","validated","validate","updateState","Form","autoFocus","tabIndex","props","name","type","size","onBlur","isValid","onChange","e","target","placeholder","className","Pure","Password","autoComplete","Email","sDialog","open","close","SnackBar","visible","msg","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","action","IconButton","color","onClick","Close","fontSize","Login","Navigate","data","event","preventDefault","sharedMemory","Loading","client","then","componentIsReady","authorized","key","activeVillageId","setState","to","S","onSubmit","login","column","sm","Col","register","ServersList","Button","variant","responseJson","Response","Array","isArray","Number","map"],"sourceRoot":""}