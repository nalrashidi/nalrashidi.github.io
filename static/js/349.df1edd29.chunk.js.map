{"version":3,"file":"static/js/349.df1edd29.chunk.js","mappings":"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","sources":["components/Map.jsx"],"sourcesContent":["import Pure from \"./Pure\";\r\nimport ImageMap from \"./Images\";\r\nimport { Link, Navigate } from \"react-router-dom\";\r\nimport client from \"./CLASSES/client\";\r\nimport \"./Map.css\";\r\n\r\nconst Land = {\r\n    Position: [\r\n        //X, Y\r\n        [16, 104],\r\n        [52, 84],\r\n        [88, 64],\r\n        [124, 44],\r\n        [160, 24],\r\n        [196, 4],\r\n        [232, -16],\r\n        [53, 124],\r\n        [89, 104],\r\n        [125, 84],\r\n        [161, 64],\r\n        [197, 44],\r\n        [233, 24],\r\n        [269, 4],\r\n        [90, 144],\r\n        [126, 124],\r\n        [162, 104],\r\n        [198, 84],\r\n        [234, 64],\r\n        [270, 44],\r\n        [306, 24],\r\n        [127, 164],\r\n        [163, 144],\r\n        [199, 124],\r\n        [235, 104],\r\n        [271, 84],\r\n        [307, 64],\r\n        [343, 44],\r\n        [164, 184],\r\n        [200, 164],\r\n        [236, 144],\r\n        [272, 124],\r\n        [308, 104],\r\n        [344, 84],\r\n        [380, 64],\r\n        [201, 204],\r\n        [237, 184],\r\n        [273, 164],\r\n        [309, 144],\r\n        [345, 124],\r\n        [381, 104],\r\n        [417, 84],\r\n        [238, 224],\r\n        [274, 204],\r\n        [310, 184],\r\n        [346, 164],\r\n        [382, 144],\r\n        [418, 124],\r\n        [454, 104]\r\n    ],\r\n    Ruler: [\r\n        [280, 292],\r\n        [280, 8],\r\n        [316, 272],\r\n        [316, 28],\r\n        [352, 252],\r\n        [352, 48],\r\n        [388, 232],\r\n        [388, 68],\r\n        [424, 212],\r\n        [424, 88],\r\n        [460, 192],\r\n        [460, 108],\r\n        [496, 172],\r\n        [496, 128]\r\n    ],\r\n    Arrows: [\r\n        \"144,56 98,84 98,49\",\r\n        \"102,233 149,260 101,266\",\r\n        \"439,87 390,57 438,52\",\r\n        \"443,266 394,257 442,232\"\r\n    ],\r\n    Polygon: [\r\n        \"53,137 90,157 53,177 16,157\",\r\n        \"89,117 126,137 89,157 52,137\",\r\n        \"125,97 162,117 125,137 88,117\",\r\n        \"161,77 198,97 161,117 124,97\",\r\n        \"197,57 234,77 197,97 160,77\",\r\n        \"233,37 270,57 233,77 196,57\",\r\n        \"269,17 306,37 269,57 232,37\",\r\n        \"90,157 127,177 90,197 53,177\",\r\n        \"126,137 163,157 126,177 89,157\",\r\n        \"162,117 199,137 162,157 125,137\",\r\n        \"198,97 235,117 198,137 161,117\",\r\n        \"234,77 271,97 234,117 197,97\",\r\n        \"270,57 307,77 270,97 233,77\",\r\n        \"306,37 343,57 306,77 269,57\",\r\n        \"127,177 164,197 127,217 90,197\",\r\n        \"163,157 200,177 163,197 126,177\",\r\n        \"199,137 236,157 199,177 162,157\",\r\n        \"235,117 272,137 235,157 198,137\",\r\n        \"271,97 308,117 271,137 234,117\",\r\n        \"307,77 344,97 307,117 270,97\",\r\n        \"343,57 380,77 343,97 306,77\",\r\n        \"164,197 201,217 164,237 127,217\",\r\n        \"200,177 237,197 200,217 163,197\",\r\n        \"236,157 273,177 236,197 199,177\",\r\n        \"272,137 309,157 272,177 235,157\",\r\n        \"308,117 345,137 308,157 271,137\",\r\n        \"344,97 381,117 344,137 307,117\",\r\n        \"380,77 417,97 380,117 343,97\",\r\n        \"201,217 238,237 201,257 164,237\",\r\n        \"237,197 274,217 237,237 200,217\",\r\n        \"273,177 310,197 273,217 236,197\",\r\n        \"309,157 346,177 309,197 272,177\",\r\n        \"345,137 382,157 345,177 308,157\",\r\n        \"381,117 418,137 381,157 344,137\",\r\n        \"417,97 454,117 417,137 380,117\",\r\n        \"238,237 275,257 238,277 201,257\",\r\n        \"274,217 311,237 274,257 237,237\",\r\n        \"310,197 347,217 310,237 273,217\",\r\n        \"346,177 383,197 346,217 309,197\",\r\n        \"382,157 419,177 382,197 345,177\",\r\n        \"418,137 455,157 418,177 381,157\",\r\n        \"454,117 491,137 454,157 417,137\",\r\n        \"275,257 312,277 275,297 238,277\",\r\n        \"311,237 348,257 311,277 274,257\",\r\n        \"347,217 384,237 347,257 310,237\",\r\n        \"383,197 420,217 383,237 346,217\",\r\n        \"419,177 456,197 419,217 382,197\",\r\n        \"455,157 492,177 455,197 418,177\",\r\n        \"491,137 528,157 491,177 454,157\"\r\n    ]\r\n}\r\n\r\nconst Updater = {\r\n    fn: () => { }\r\n};\r\n\r\nclass Map extends Pure {\r\n    id = -1;\r\n    state = {\r\n        // id: parseInt(new URLSearchParams(window.location.search).get(\"id\")) || client.activeVillageId || 1,\r\n        x: 0, y: 0,\r\n        ready: false\r\n    };\r\n    update() { }\r\n    ready() {\r\n        this.updateState({ ready: true });\r\n    }\r\n    updateCoords(x = 0, y = 0) {\r\n        this.updateState({ x, y, ready: true });\r\n    }\r\n    setId(delta = 0, max = 10201, vertical = true) {\r\n        let id = Math.floor(this.id + delta) % max;\r\n        console.log([id, max, id < 1 ? max - id : id]);\r\n        if (id < 1) id = max + id;\r\n        Updater.fn(this.id = id);\r\n    }\r\n    horizontal(delta = 0) {\r\n        let id = Math.floor(this.id + delta) % 10201;\r\n        if (id < 1) id += 101 * Math.floor(this.id / 101);\r\n        console.log([this.id, \"=>\", id]);\r\n        Updater.fn(this.id = id);\r\n    }\r\n    vertical(delta = 0) {\r\n        let id = Math.floor(this.id + delta) % 10201;\r\n        console.log([id, 10201, id < 1 ? 10201 - id : id]);\r\n        if (id < 1) id = 10201 + id;\r\n        Updater.fn(this.id = id);\r\n    }\r\n    navigate(to = 0, v = true) {\r\n        return e => {\r\n            e.preventDefault();\r\n            if (v) this.vertical(to);\r\n            else this.horizontal(to);\r\n        }\r\n    }\r\n    render() {\r\n        if (!client.ready)\r\n            return <></>;\r\n        if (!client.authorized)\r\n            return <Navigate to=\"/Home\" />;\r\n        if (this.id === -1)\r\n            this.id = parseInt(new URLSearchParams(window.location.search).get(\"id\")) || client.activeVillageId || 1;\r\n        console.log(\"this.id = \" + this.id);\r\n        return <div id=\"Map\">\r\n            <h4>خريطة{this.state.ready ? ` (${this.state.x} , ${this.state.y})` : \"\"}</h4>\r\n            <table className=\"info_box table_collapsed\">\r\n                <tbody>\r\n                    <tr><th colSpan={2}>{this.id}, c{client.activeVillageId}</th></tr>\r\n                    <tr><td>اللاعب:</td><td>-</td></tr>\r\n                    <tr><td>السكان:</td><td>-</td></tr>\r\n                    <tr><td>التحالف:</td><td>-</td></tr>\r\n                </tbody>\r\n            </table>\r\n            <svg viewBox=\"0 0 540 316\">\r\n                <image xlinkHref={ImageMap.map.background} width={540} height={316} />\r\n                <MapView id={this.id}\r\n                    onReady={() => this.ready()}\r\n                    updater={(x, y) => this.updateCoords(x, y)}\r\n                    update={() => this.update()}\r\n                />\r\n                <Link to=\"#\" onClick={this.navigate(-101)}><polygon points={Land.Arrows[0]} /></Link>\r\n                <Link to=\"#\" onClick={this.navigate(-1, false)}><polygon points={Land.Arrows[1]} /></Link>\r\n                <Link to=\"#\" onClick={this.navigate(1, false)}><polygon points={Land.Arrows[2]} /></Link>\r\n                <Link to=\"#\" onClick={this.navigate(101)}><polygon points={Land.Arrows[3]} /></Link>\r\n            </svg>\r\n        </div>;\r\n    }\r\n}\r\n\r\nclass MapView extends Pure {\r\n    state = { Content: [] };\r\n    request(id = 1) {\r\n        client.mapViewNormal(response => {\r\n            if (!this.componentIsReady) return;\r\n            let images = [];\r\n            let links = [];\r\n            let ruler = [];\r\n            let rIncX = 0;\r\n            let rIncY = 1;\r\n            let map = response.data;\r\n            map.info.forEach((info, index) => {\r\n                let data = map.data[index];\r\n                let P = Land.Position[index];\r\n                let C = Land.Polygon[index];\r\n                images.push(<image key={`Map-Image-${index}-${data[0]}`} xlinkHref={ImageMap.map[info[3]]} x={P[0]} y={P[1]} width=\"74\" height=\"74\" />);\r\n                links.push(<Link onMouseEnter={() => this.props.updater(data[5], data[6])} key={`Map-Link-${index}-${data[0]}`} to={\"/View?id=\" + data[0]}>\r\n                    <polygon points={C} opacity={0} />\r\n                </Link>);\r\n                let R = Land.Ruler;\r\n                if (index % 7 === 0) {\r\n                    let Y = R[rIncX];\r\n                    ruler.push(<text key={`Map-Ruler-X-${index}-${data[0]}`} x={Y[0] + 30} y={Y[1] + 14}>{data[5]}</text>);\r\n                    rIncX += 2;\r\n                }\r\n                if (index < 7) {\r\n                    let X = R[rIncY];\r\n                    ruler.push(<text key={`Map-Ruler-Y-${index}-${data[0]}`} x={X[0] + 30} y={X[1] + 12}>{data[6]}</text>);\r\n                    rIncY += 2;\r\n                }\r\n            });\r\n            this.updateState({ Content: images.concat(links, ruler) });\r\n        }, id);\r\n    }\r\n    onReady() {\r\n        this.request(this.props.id);\r\n        Updater.fn = (id = 1) => { this.request(id); }\r\n    }\r\n    render() {\r\n        return this.state.Content;\r\n    }\r\n}\r\n\r\nfunction CustomSort(a = [1, 2, 3]) {\r\n    let l = a.length;\r\n    for (let i = 0; i < l - 1; i++) {\r\n        let s = i;\r\n        for (let j = i + 1; j < l; j++)\r\n            if (a[s] > a[j])\r\n                s = j;\r\n        if (s !== i) {\r\n            let t = a[i];\r\n            a[i] = a[s];\r\n            a[s] = t;\r\n        }\r\n    }\r\n    return a;\r\n}\r\n\r\nfunction compare(rounds = 1e6) {\r\n    let totalN = 0, totalC = 0;\r\n    for (let i = 0; i < rounds; i++) {\r\n        let c = performance.now();\r\n        let ArrayC = [89, 64, 69, 71, 96, 6, 23, 40, 71, 63, 47, 19, 4, 29, 85, 23, 21, 96, 21, 2, 4, 17, 3, 14, 88, 94, 14, 28, 9, 70, 65, 64, 50, 67, 59, 43, 38, 44, 15, 36, 70, 87, 7, 21, 15, 2, 19, 42, 18, 19, 16, 52, 86, 99, 42, 68, 96, 40, 62, 15, 31, 49, 85, 26, 33, 96, 74, 71, 65, 62, 2, 5, 45, 46, 33, 47, 97, 90, 16, 26, 41, 85, 1, 60, 24, 73, 60, 74, 13, 84, 10, 85, 95, 54, 85, 23, 83, 43, 27, 28];\r\n        CustomSort(ArrayC);\r\n        totalC += performance.now() - c;\r\n\r\n        let n = performance.now();\r\n        let ArrayN = [89, 64, 69, 71, 96, 6, 23, 40, 71, 63, 47, 19, 4, 29, 85, 23, 21, 96, 21, 2, 4, 17, 3, 14, 88, 94, 14, 28, 9, 70, 65, 64, 50, 67, 59, 43, 38, 44, 15, 36, 70, 87, 7, 21, 15, 2, 19, 42, 18, 19, 16, 52, 86, 99, 42, 68, 96, 40, 62, 15, 31, 49, 85, 26, 33, 96, 74, 71, 65, 62, 2, 5, 45, 46, 33, 47, 97, 90, 16, 26, 41, 85, 1, 60, 24, 73, 60, 74, 13, 84, 10, 85, 95, 54, 85, 23, 83, 43, 27, 28];\r\n        ArrayN.sort((a, b) => a - b);\r\n        totalN += performance.now() - n;\r\n    }\r\n    console.log(`Native: ${totalN}ms\\nCustom: ${totalC}ms`);\r\n}\r\n\r\nexport default Map;"],"names":["Land","Position","Ruler","Arrows","Polygon","Updater","fn","Map","id","state","x","y","ready","this","updateState","delta","max","Math","floor","console","log","to","v","e","preventDefault","vertical","horizontal","client","parseInt","URLSearchParams","window","location","search","get","className","colSpan","viewBox","xlinkHref","ImageMap","width","height","MapView","onReady","updater","updateCoords","update","onClick","navigate","points","Pure","Content","response","componentIsReady","images","links","ruler","rIncX","rIncY","map","data","info","forEach","index","P","C","push","onMouseEnter","props","opacity","R","Y","X","concat","request"],"sourceRoot":""}